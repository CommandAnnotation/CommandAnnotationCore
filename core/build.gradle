plugins {
    id 'java'
    id 'maven-publish'
    id 'skywolf46.wolfradle' version "1.1.3"
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
}

version project.parent.properties["version"]

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
    testImplementation("junit:junit:4.13")
    implementation("skywolf46:exutil-common:latest.release")
    implementation("skywolf46:placeholders-core:latest.release")
    testImplementation("skywolf46:exutil-common:latest.release")
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.7.1")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.1")
    testImplementation("org.junit.platform:junit-platform-runner:1.7.1")
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "Reposilite"
            url(rootProject.properties["snapshot"] as Boolean ? rootProject.properties['reposilite.snapshot'] as String : rootProject.properties['reposilite.release'] as String)
            credentials {
                username rootProject.properties['reposilite.user'] as String
                password rootProject.properties['reposilite.token'] as String
            }
        }
    }
    publications {
        create("jar", MavenPublication) {
            groupId 'skywolf46'
            artifactId "commandannotation-${project.name.toLowerCase()}"
            version rootProject.properties['version'] as String
            from components.java
        }
    }
}


